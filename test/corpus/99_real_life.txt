========================
Real Life Example
========================

/*
 * Header with license information.
 */

/**
 * An example protocol in Avro IDL
 */
@namespace("org.apache.avro.test")
protocol Simple {
  // Import the example file above
  import idl "schema.avdl";

  /** Errors are records that can be thrown from a method */
  error TestError {
    string message;
  }

  string hello(string greeting);
  /** Return what was given. Demonstrates the use of backticks to name types/fields/messages/parameters after keywords */
  TestRecord echo(TestRecord `record`);
  int add(int arg1, int arg2);
  bytes echoBytes(bytes data);
  void `error`() throws TestError;
  // The oneway keyword forces the method to return null.
  void ping() oneway;
}

---

(program
  (import_declaration
    (identifier)
    (string)
  )
  (protocol_declaration
    (anotation_statement
      (anotation_identifier)
      (anotation_arguments
        (literal_type
          (string)
        )
      )
    )
    (identifier)
    (protocol_block
      (enum_declaration
        (identifier)
        (enum_block
          (enumeral)
          (enumeral)
          (enumeral)
          (enumeral)
        )
      )
      (fixed_declaration
        (call_expression
          (identifier)
          (argument_list
            (literal_type
              (number)
            )
          )
        )
      )
      (record_declaration (identifier)
        (statement_block
          (field_declaration
            (primitive_type)
            (identifier)
          )
          (field_declaration
            (primitive_type)
            (identifier)
          )
          (field_declaration
            (primitive_type)
            (identifier)
          )
        )
      )

      (error_declaration (identifier)
        (statement_block
          (field_declaration
            (primitive_type)
            (identifier)
          )
          (field_declaration
            (primitive_type)
            (default_value_expression
              (identifier)
              (value
                (literal_type
                  (number)
                )
              )
            )
          )
        )
      )
    )
  )
)
